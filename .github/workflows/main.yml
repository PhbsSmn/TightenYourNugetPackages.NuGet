name: CI

on:
  create:
    branches:
      - release/**
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:

    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'TightenYourNugetPackages.NuGet.sln'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Get Build Version
      run: |
        Import-Module .\build\GetBuildVersion.psm1
        Write-Host $Env:GITHUB_REF
        $version = GetBuildVersion -VersionString $Env:GITHUB_REF
        echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        Write-Host $version
      shell: pwsh

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
      with:
        nuget-version: 'latest'

    - name: Add packages to src projects
      run: |
        dotnet add package Microsoft.SourceLink.GitHub ./src/DigitalDiary.Abstractions/DigitalDiary.Abstractions.csproj
        dotnet add package DotNet.ReproducibleBuilds ./src/DigitalDiary.Abstractions/DigitalDiary.Abstractions.csproj

        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
        git commit -a -m "update project(s)"
    
    - name: Restore dependencies
      run: nuget restore $SOLUTION

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.x
          7.x

    - name: Build
      run: dotnet build $SOLUTION --configuration $BUILD_CONFIG --no-restore -p:"VersionPrefix=$BUILD_VERSION"
      
    - name: Upload artifacts
      if: startsWith(github.ref, 'refs/heads/main')
      uses: actions/upload-artifact@v3
      with:
        name: packages
        path: |
          **/*.nupkg
          **/*.snupkg

    - name: Publish
      if: startsWith(github.ref, 'refs/heads/release')
      run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}
